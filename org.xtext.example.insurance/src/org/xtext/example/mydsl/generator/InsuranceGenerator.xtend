/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import org.xtext.example.mydsl.insurance.Product


class InsuranceGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		for(e: resource.allContents.toIterable.filter(typeof(Product))) {
			if(e.selling.equals("TAK")){
				fsa.generateFile(e.name + ".html", translateStandalone(e))
			}
		}
		fsa.generateFile("index.html",generateIndex(resource.allContents.toIterable.filter(typeof(Product))));
	}
	
	def generateIndex(Iterable<Product> products) { 
		'''<html><head></head><body>
		<table>
			«FOR e:products»
				<tr>
					<td>
						«e.name»
					</td>
					<td>
						«IF "TAK".equals(e.selling)»
							<a href="«e.name».html">Check!</a>
						«ELSE»
							not yet available
						«ENDIF»
					</td>
				</tr>
			«ENDFOR»
		</table>
		</body></html>'''
	}

	
	def CharSequence translateStandalone(Product product) { '''
		<html>
		<head></head>
		<body>

			<h1>Oferta specjalna: «product.name»</h1>
			<h2>«product.description»</h2>
			Tylko za «product.getPrice()»zł!!!!
		</body>
		</html>"
	'''
	}
	
	def getPrice(Product product) { 
		return ((product.avgDamages * product.occurrences / 1000 + product.cost)* (1+product.earnings) );
	}


}
