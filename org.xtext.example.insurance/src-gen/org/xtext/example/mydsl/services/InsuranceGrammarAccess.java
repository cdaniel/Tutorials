/*
* generated by Xtext
*/

package org.xtext.example.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class InsuranceGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Assignment cProductsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cProductsProductParserRuleCall_0 = (RuleCall)cProductsAssignment.eContents().get(0);
		
		//Model:
		//	products+=Product*;
		public ParserRule getRule() { return rule; }

		//products+=Product*
		public Assignment getProductsAssignment() { return cProductsAssignment; }

		//Product
		public RuleCall getProductsProductParserRuleCall_0() { return cProductsProductParserRuleCall_0; }
	}

	public class ProductElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Product");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProduktKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cOPISKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDescriptionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_0 = (RuleCall)cDescriptionAssignment_4.eContents().get(0);
		private final Keyword cSREDNIEODSZKODOWANIEKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAvgDamagesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAvgDamagesINTTerminalRuleCall_6_0 = (RuleCall)cAvgDamagesAssignment_6.eContents().get(0);
		private final Keyword cCZESTOSCZDARZENNA1000Keyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cOccurrencesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOccurrencesINTTerminalRuleCall_8_0 = (RuleCall)cOccurrencesAssignment_8.eContents().get(0);
		private final Keyword cOCZEKIWANYZYSKKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cEarningsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cEarningsINTTerminalRuleCall_10_0 = (RuleCall)cEarningsAssignment_10.eContents().get(0);
		private final Keyword cKOSZTOBSLUGISztKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cCostAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cCostINTTerminalRuleCall_12_0 = (RuleCall)cCostAssignment_12.eContents().get(0);
		private final Keyword cWSPRZEDAZYKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cSellingAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cSellingYesNoParserRuleCall_14_0 = (RuleCall)cSellingAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cPOWIAZANEPRODUKTYKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cConnectedAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final CrossReference cConnectedProductCrossReference_15_1_0 = (CrossReference)cConnectedAssignment_15_1.eContents().get(0);
		private final RuleCall cConnectedProductIDTerminalRuleCall_15_1_0_1 = (RuleCall)cConnectedProductCrossReference_15_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//Product:
		//	"Produkt" name=ID "{" "OPIS=" description=STRING "SREDNIE ODSZKODOWANIE=" avgDamages=INT "CZESTOSC ZDARZEN NA 1000="
		//	occurrences=INT "OCZEKIWANY ZYSK (%)=" earnings=INT "KOSZT OBSLUGI (szt)=" cost=INT "W SPRZEDAZY=" selling=YesNo
		//	("POWIAZANE PRODUKTY=" connected+=[Product]*)? "}";
		public ParserRule getRule() { return rule; }

		//"Produkt" name=ID "{" "OPIS=" description=STRING "SREDNIE ODSZKODOWANIE=" avgDamages=INT "CZESTOSC ZDARZEN NA 1000="
		//occurrences=INT "OCZEKIWANY ZYSK (%)=" earnings=INT "KOSZT OBSLUGI (szt)=" cost=INT "W SPRZEDAZY=" selling=YesNo
		//("POWIAZANE PRODUKTY=" connected+=[Product]*)? "}"
		public Group getGroup() { return cGroup; }

		//"Produkt"
		public Keyword getProduktKeyword_0() { return cProduktKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"OPIS="
		public Keyword getOPISKeyword_3() { return cOPISKeyword_3; }

		//description=STRING
		public Assignment getDescriptionAssignment_4() { return cDescriptionAssignment_4; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_0() { return cDescriptionSTRINGTerminalRuleCall_4_0; }

		//"SREDNIE ODSZKODOWANIE="
		public Keyword getSREDNIEODSZKODOWANIEKeyword_5() { return cSREDNIEODSZKODOWANIEKeyword_5; }

		//avgDamages=INT
		public Assignment getAvgDamagesAssignment_6() { return cAvgDamagesAssignment_6; }

		//INT
		public RuleCall getAvgDamagesINTTerminalRuleCall_6_0() { return cAvgDamagesINTTerminalRuleCall_6_0; }

		//"CZESTOSC ZDARZEN NA 1000="
		public Keyword getCZESTOSCZDARZENNA1000Keyword_7() { return cCZESTOSCZDARZENNA1000Keyword_7; }

		//occurrences=INT
		public Assignment getOccurrencesAssignment_8() { return cOccurrencesAssignment_8; }

		//INT
		public RuleCall getOccurrencesINTTerminalRuleCall_8_0() { return cOccurrencesINTTerminalRuleCall_8_0; }

		//"OCZEKIWANY ZYSK (%)="
		public Keyword getOCZEKIWANYZYSKKeyword_9() { return cOCZEKIWANYZYSKKeyword_9; }

		//earnings=INT
		public Assignment getEarningsAssignment_10() { return cEarningsAssignment_10; }

		//INT
		public RuleCall getEarningsINTTerminalRuleCall_10_0() { return cEarningsINTTerminalRuleCall_10_0; }

		//"KOSZT OBSLUGI (szt)="
		public Keyword getKOSZTOBSLUGISztKeyword_11() { return cKOSZTOBSLUGISztKeyword_11; }

		//cost=INT
		public Assignment getCostAssignment_12() { return cCostAssignment_12; }

		//INT
		public RuleCall getCostINTTerminalRuleCall_12_0() { return cCostINTTerminalRuleCall_12_0; }

		//"W SPRZEDAZY="
		public Keyword getWSPRZEDAZYKeyword_13() { return cWSPRZEDAZYKeyword_13; }

		//selling=YesNo
		public Assignment getSellingAssignment_14() { return cSellingAssignment_14; }

		//YesNo
		public RuleCall getSellingYesNoParserRuleCall_14_0() { return cSellingYesNoParserRuleCall_14_0; }

		//("POWIAZANE PRODUKTY=" connected+=[Product]*)?
		public Group getGroup_15() { return cGroup_15; }

		//"POWIAZANE PRODUKTY="
		public Keyword getPOWIAZANEPRODUKTYKeyword_15_0() { return cPOWIAZANEPRODUKTYKeyword_15_0; }

		//connected+=[Product]*
		public Assignment getConnectedAssignment_15_1() { return cConnectedAssignment_15_1; }

		//[Product]
		public CrossReference getConnectedProductCrossReference_15_1_0() { return cConnectedProductCrossReference_15_1_0; }

		//ID
		public RuleCall getConnectedProductIDTerminalRuleCall_15_1_0_1() { return cConnectedProductIDTerminalRuleCall_15_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
	}

	public class YesNoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "YesNo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTAKKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cNIEKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//YesNo:
		//	"TAK" | "NIE";
		public ParserRule getRule() { return rule; }

		//"TAK" | "NIE"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"TAK"
		public Keyword getTAKKeyword_0() { return cTAKKeyword_0; }

		//"NIE"
		public Keyword getNIEKeyword_1() { return cNIEKeyword_1; }
	}
	
	
	private ModelElements pModel;
	private ProductElements pProduct;
	private YesNoElements pYesNo;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public InsuranceGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.Insurance".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	products+=Product*;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Product:
	//	"Produkt" name=ID "{" "OPIS=" description=STRING "SREDNIE ODSZKODOWANIE=" avgDamages=INT "CZESTOSC ZDARZEN NA 1000="
	//	occurrences=INT "OCZEKIWANY ZYSK (%)=" earnings=INT "KOSZT OBSLUGI (szt)=" cost=INT "W SPRZEDAZY=" selling=YesNo
	//	("POWIAZANE PRODUKTY=" connected+=[Product]*)? "}";
	public ProductElements getProductAccess() {
		return (pProduct != null) ? pProduct : (pProduct = new ProductElements());
	}
	
	public ParserRule getProductRule() {
		return getProductAccess().getRule();
	}

	//YesNo:
	//	"TAK" | "NIE";
	public YesNoElements getYesNoAccess() {
		return (pYesNo != null) ? pYesNo : (pYesNo = new YesNoElements());
	}
	
	public ParserRule getYesNoRule() {
		return getYesNoAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
